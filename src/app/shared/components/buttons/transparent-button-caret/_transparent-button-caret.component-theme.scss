@use 'sass:map';
@use '@angular/material' as mat;
  
@mixin color($theme) {
  $color-config: mat.get-color-config($theme);

  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');

  // primary bg
  .transparent-button-caret.mdc-button.mat-mdc-button-base {
    background-color: transparent;
    color: mat.get-color-from-palette($accent-palette, 500);
  }

  button.transparent-button-caret.mat-mdc-button.mat-mdc-outlined-button:hover,
  button.transparent-button-caret.mdc-button.mat-mdc-button-base:hover {
    border-bottom-color: mat.get-color-from-palette($primary-palette, 700);
    background-color: transparent;
    --mat-mdc-button-persistent-ripple-color: none;
    svg path {
      fill: mat.get-color-from-palette($primary-palette, 700);
    }
    .text {
      color: mat.get-color-from-palette($primary-palette, 700);  
    }
    color: mat.get-color-from-palette($primary-palette, 700);
  }
}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);

  .transparent-button-caret.mdc-button.mat-mdc-button-base .text {
    @include mat.typography-level($typography-config, 'body-2');
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }
  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}